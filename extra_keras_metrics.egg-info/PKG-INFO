Metadata-Version: 2.1
Name: extra-keras-metrics
Version: 1.1.1
Summary: Additional metrics integrated with the keras NN library, taken directly from `Tensorflow <https://www.tensorflow.org/api_docs/python/tf/metrics/>`_
Home-page: https://github.com/LucaCappelletti94/extra_keras_metrics
Author: Luca Cappelletti
Author-email: cappelletti.luca94@gmail.com
License: MIT
Description: extra_keras_metrics
        =========================================================================================
        |travis| |sonar_quality| |sonar_maintainability| |codacy| |code_climate_maintainability| |pip| |downloads|
        
        Additional metrics integrated with the keras NN library, taken directly from `Tensorflow <https://www.tensorflow.org/api_docs/python/tf/metrics/>`_
        
        How do I install this package?
        ----------------------------------------------
        As usual, just download it using pip:
        
        .. code:: shell
        
            pip install extra_keras_metrics
        
        Tests Coverage
        ----------------------------------------------
        Since some software handling coverages sometime get slightly different results, here's three of them:
        
        |coveralls| |sonar_coverage| |code_climate_coverage|
        
        How do I use this package?
        ----------------------------------------------
        Just by importing it you will be able to access all the non-parametric metrics, such as `"auprc"` and `"auroc"`:
        
        .. code:: python
        
            import extra_keras_metrics
        
            model = my_keras_model()
            model.compile(
                optimizer="sgd",
                loss="binary_crossentropy",
                metrics=["auroc", "auprc"]
            )
        
        For the parametric metrics, such as `"average_precision_at_k"`, you will need to import them, such as:
        
        .. code:: python
        
            from extra_keras_metrics import average_precision_at_k
        
            model = my_keras_model()
            model.compile(
                optimizer="sgd",
                loss="binary_crossentropy",
                metrics=[average_precision_at_k(1), average_precision_at_k(2)]
            )
        
        This way in the history of the model you will find both the metrics indexed as `"average_precision_at_k_1"` and `"average_precision_at_k_2"` respectively.
        
        Which metrics do I get?
        ----------------------------------------------
        You will get **all** the metrics from `Tensorflow <https://www.tensorflow.org/api_docs/python/tf/metrics/>`_. At the time of writing, the ones available are the following:
        
        The **non-parametric** ones are:
        
        - auprc
        - auroc
        - false_negatives
        - false_positives
        - mean_absolute_error
        - mean_squared_error
        - precision
        - recall
        - root_mean_squared_error
        - true_negatives
        - true_positives
        
        The **parametric** ones are:
        
        - average_precision_at_k
        - false_negatives_at_thresholds
        - false_positives_at_thresholds
        - mean_cosine_distance
        - mean_iou
        - mean_per_class_accuracy
        - mean_relative_error
        - precision_at_k
        - precision_at_thresholds
        - recall_at_k
        - recall_at_thresholds
        - sensitivity_at_specificity
        - specificity_at_sensitivity
        - true_negatives_at_thresholds
        - true_positives_at_thresholds
        
        .. |travis| image:: https://travis-ci.org/LucaCappelletti94/extra_keras_metrics.png
           :target: https://travis-ci.org/LucaCappelletti94/extra_keras_metrics
           :alt: Travis CI build
        
        .. |sonar_quality| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_extra_keras_metrics&metric=alert_status
            :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_extra_keras_metrics
            :alt: SonarCloud Quality
        
        .. |sonar_maintainability| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_extra_keras_metrics&metric=sqale_rating
            :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_extra_keras_metrics
            :alt: SonarCloud Maintainability
        
        .. |sonar_coverage| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_extra_keras_metrics&metric=coverage
            :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_extra_keras_metrics
            :alt: SonarCloud Coverage
        
        .. |coveralls| image:: https://coveralls.io/repos/github/LucaCappelletti94/extra_keras_metrics/badge.svg?branch=master
            :target: https://coveralls.io/github/LucaCappelletti94/extra_keras_metrics?branch=master
            :alt: Coveralls Coverage
        
        .. |pip| image:: https://badge.fury.io/py/extra_keras_metrics.svg
            :target: https://badge.fury.io/py/extra_keras_metrics
            :alt: Pypi project
        
        .. |downloads| image:: https://pepy.tech/badge/extra_keras_metrics
            :target: https://pepy.tech/badge/extra_keras_metrics
            :alt: Pypi total project downloads 
        
        .. |codacy|  image:: https://api.codacy.com/project/badge/Grade/5c1fbcfbffc047e6bf810e9372198a5b
            :target: https://www.codacy.com/app/LucaCappelletti94/extra_keras_metrics?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=LucaCappelletti94/extra_keras_metrics&amp;utm_campaign=Badge_Grade
            :alt: Codacy Maintainability
        
        .. |code_climate_maintainability| image:: https://api.codeclimate.com/v1/badges/b1008a3d75104ce62162/maintainability
            :target: https://codeclimate.com/github/LucaCappelletti94/extra_keras_metrics/maintainability
            :alt: Maintainability
        
        .. |code_climate_coverage| image:: https://api.codeclimate.com/v1/badges/b1008a3d75104ce62162/test_coverage
            :target: https://codeclimate.com/github/LucaCappelletti94/extra_keras_metrics/test_coverage
            :alt: Code Climate Coverate
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Provides-Extra: test
